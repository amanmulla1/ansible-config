---
- name: Set hostname for master
  hostname:
    name: kmaster-node

- name: Disable swap
  command: swapoff -a

- name: Disable swap in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].* swap .*)$'
    replace: '# \1'

- name: Update apt
  apt:
    update_cache: yes

- name: Install docker
  apt:
    name: docker.io
    state: present

- name: Load kernel modules
  modprobe:
    name: "{{ item }}"
  loop:
    - overlay
    - br_netfilter

- name: Add kernel module configs
  copy:
    dest: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter

- name: Add sysctl params
  copy:
    dest: /etc/sysctl.d/kubernetes.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: Apply sysctl params
  command: sysctl --system

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker repo
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

- name: Install containerd
  apt:
    name: containerd.io
    update_cache: yes
    state: present

- name: Generate containerd config
  shell: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml

- name: Set SystemdCgroup = true
  replace:
    path: /etc/containerd/config.toml
    regexp: '^\s*SystemdCgroup\s*=.*'
    replace: '            SystemdCgroup = true'

- name: Restart containerd
  systemd:
    name: containerd
    state: restarted
    enabled: yes

- name: Install K8s dependencies
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg
    state: present

- name: Add Kubernetes GPG key
  shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes repo
  copy:
    dest: /etc/apt/sources.list.d/kubernetes.list
    content: |
      deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /

- name: Install Kubernetes packages
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    update_cache: yes
    state: present

- name: Enable kubelet
  systemd:
    name: kubelet
    enabled: true

- name: Pull kubeadm images
  command: kubeadm config images pull

- name: Initialize Kubernetes master
  command: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem
  register: init_output
  args:
    creates: /etc/kubernetes/admin.conf

- name: Set up kubeconfig for regular user
  shell: |
    mkdir -p $HOME/.kube && \
    cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && \
    chown $(id -u):$(id -g) $HOME/.kube/config

- name: Install Flannel CNI
  shell: kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Save kubeadm join command
  shell: kubeadm token create --print-join-command > /tmp/kubeadm_join_command.txt
